class FizzBuzz {
  private limit: number;
  constructor(limit: number) {
    this.limit = limit;
  }

  setLimit(limit: number) {
    this.limit = limit;
  }

  getLimit() {
    return this.limit;
  }

  generate(): string[] {
    const answer: string[] = [];
    for (let i = 1; i <= this.limit; i++) {
      answer.push(this.getReplacementByNumber(i));
    }

    return answer;
  }

  getReplacementByNumber(number: number): string {
    if (number % 15 === 0) return "FizzBuzz";
    if (number % 3 === 0) return "Fizz";
    if (number % 5 === 0) return "Buzz";
    return String(number);
  }
}

const fb = new FizzBuzz(100);
console.log(fb.generate().join(", "));
fb.setLimit(200);
console.log(fb.generate().join(", "));
